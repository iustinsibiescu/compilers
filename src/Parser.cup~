import java_cup.runtime.*;
   

parser code {:
    
    boolean syntaxErrors;
    
    public void syntax_error(Symbol current_token) {
		syntaxErrors = true;
    		report_error(
			"Syntax error at line " + (current_token.left+1) + ", column "
			+ current_token.right + current_token.toString() +"\n\n\n\n\n", null
		);
    }
    public void report_fatal_error(String message, Object info) {
    		report_error("", null);
    		done_parsing();
  }

:};
   

terminal ID, INTEGER_TYPE, INTEGER_NUMBER, LPAREN, RPAREN, PLUS, MINUS, TIMES, DIVIDE, SEMI, COLON, ASSIGN, IF, FI, THEN, ELSE;
non terminal Object  body, ifblock, declrs, stmts, stmt, declr, init_declr, normal_declr, assignment, type, expr, factor, term;

   body ::= declrs stmts
	    | stmts
            ;

   ifblock ::= IF LPAREN expr RPAREN THEN body ELSE body FI
	      | IF LPAREN expr RPAREN THEN body FI 
	      ; 

   declrs ::= declrs declr
	    | declr;

   stmts ::= stmts stmt
            | stmt;

   stmt ::= ID assignment SEMI
            ;

   declr ::= normal_declr SEMI
            | init_declr SEMI
            ;

   init_declr ::= normal_declr assignment;

   normal_declr ::= ID COLON type;

   assignment ::= ASSIGN expr;

   type ::= INTEGER_TYPE;
   
   
   expr      ::= expr PLUS factor
                 | expr MINUS factor
                 | factor
                 ;
   
   
   factor    ::= factor TIMES term
                 | factor DIVIDE term
                 | term
                 ;
   
   
   term      ::= LPAREN expr RPAREN
                 | INTEGER_NUMBER
                 | ID
                 ;
   
   
